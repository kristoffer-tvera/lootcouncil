@page
@model Lootcouncil.Pages.Council.NewModel
@{
}

<ol>
    @if (Model.Instance == null)
    {
        <li>Start by picking a instance <a asp-area="" asp-page="/Setup/Expansion">here</a>.</li>
    }
    else
    {
        <li><s>Start by picking a instance <a asp-area="" asp-page="/Setup/Expansion">here</a>.</s></li>
    }
    <li>Pick the characters that are expected to be part of this council</li>
</ol>



@if (Model.Instance != null)
{
    <hr />
    <h3>@Model.Instance.Name</h3>
}


@if (Model.Members != null)
{
    <hr />

    <p>Pick members from the list below. You can also use the slider below to automatically pick groups of members based on guild-rank. Current filter: <span data-rank-current>@Model.DefaultMemberRankIncluded</span></p>
    <p>
        <input class="mdl-slider mdl-js-slider" type="range" min="0" max="@Model.MaxRank" value="@Model.DefaultMemberRankIncluded" step="1" tabindex="0" data-rank-slider>
    </p>
    <form method="post">
        <button type="submit">Confirm Selection</button>
        <input type="hidden" name="instance" value="123"/>
        <ul class="demo-list-control mdl-list">
            @foreach (var member in Model.Members.OrderBy(m => m.Rank))
            {
                <li class="mdl-list__item">
                    <span class="mdl-list__item-primary-content">
                        <i class="material-icons  mdl-list__item-avatar">person</i>
                        @member.Character.Name (@member.Rank)
                    </span>
                    <span class="mdl-list__item-secondary-action">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="character-@(member.Character.Id)" data-rank="@member.Rank">
                            <input type="checkbox" name="CharacterId" value="@member.Character.Id" id="character-@(member.Character.Id)" class="mdl-checkbox__input" @(member.Rank >= Model.DefaultMemberRankIncluded ? "" : "checked") />
                        </label>
                    </span>
                </li>
            }
        </ul>
    </form>
}

<script>
    let slider = document.querySelector('[data-rank-slider]');
    if (slider) {
        slider.addEventListener('change', function (e) {
            let element = e.srcElement;

            let rank = Number.parseInt(element.value) || 0;

            let currentRankDisplay = document.querySelector('[data-rank-current]');
            if (currentRankDisplay) {
                currentRankDisplay.innerText = rank;
            }

            let guildMembers = document.querySelectorAll('[data-rank]');
            if (guildMembers && guildMembers.length > 0) {
                for (const member of guildMembers) {
                    //console.log(member);
                    let memberRank = member.getAttribute('data-rank');
                    memberRank = Number.parseInt(memberRank);
                    if (memberRank >= rank) {
                        member.MaterialCheckbox.uncheck();
                    } else {
                        member.MaterialCheckbox.check();
                    }
                }


            }
        });
        // read slider value, queryselectorall on value
    }
</script>